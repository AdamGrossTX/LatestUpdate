<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="115" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2019-01-08" time="12:43:19">
  <environment user="appveyor" machine-name="APPVYR-WIN" cwd="C:\projects\latestupdate" user-domain="APPVYR-WIN" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition5" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="134.9955" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\latestupdate\tests\Main.Tests.ps1" executed="True" result="Success" success="True" time="9.2229" asserts="0" description="C:\projects\latestupdate\tests\Main.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="General project validation" executed="True" result="Success" success="True" time="8.5444" asserts="0" description="General project validation">
            <results>
              <test-suite type="ParameterizedTest" name="General project validation.Script &lt;file&gt; should be valid PowerShell" executed="True" result="Success" success="True" time="1.4952" asserts="0" description="Script &lt;file&gt; should be valid PowerShell">
                <results>
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-KbUpdateArray.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-KbUpdateArray.ps1 should be valid PowerShell" time="1.0888" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-RxString.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-RxString.ps1 should be valid PowerShell" time="0.1151" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateCatalogLink.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateCatalogLink.ps1 should be valid PowerShell" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateDownloadArray.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateDownloadArray.ps1 should be valid PowerShell" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateFeed.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateFeed.ps1 should be valid PowerShell" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-ValidPath.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-ValidPath.ps1 should be valid PowerShell" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Import-MdtModule.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Import-MdtModule.ps1 should be valid PowerShell" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\New-MdtDrive.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\New-MdtDrive.ps1 should be valid PowerShell" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should be valid PowerShell" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should be valid PowerShell" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should be valid PowerShell" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should be valid PowerShell" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Test-PSCore.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Private\Test-PSCore.ps1 should be valid PowerShell" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestFlash.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestFlash.ps1 should be valid PowerShell" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestServicingStack.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestServicingStack.ps1 should be valid PowerShell" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should be valid PowerShell" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should be valid PowerShell" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should be valid PowerShell" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\LatestUpdate.psm1 should be valid PowerShell" name="General project validation.Script C:\projects\latestupdate\LatestUpdate\LatestUpdate.psm1 should be valid PowerShell" time="0.06" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="General project validation.&lt;file&gt; should pass ScriptAnalyzer" executed="True" result="Success" success="True" time="7.0492" asserts="0" description="&lt;file&gt; should pass ScriptAnalyzer">
                <results>
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-KbUpdateArray.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Get-KbUpdateArray.ps1 should pass ScriptAnalyzer" time="1.2171" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-RxString.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Get-RxString.ps1 should pass ScriptAnalyzer" time="0.0989" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateCatalogLink.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateCatalogLink.ps1 should pass ScriptAnalyzer" time="0.3039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateDownloadArray.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateDownloadArray.ps1 should pass ScriptAnalyzer" time="0.7834" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateFeed.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateFeed.ps1 should pass ScriptAnalyzer" time="0.4043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-ValidPath.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Get-ValidPath.ps1 should pass ScriptAnalyzer" time="0.1451" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Import-MdtModule.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Import-MdtModule.ps1 should pass ScriptAnalyzer" time="0.2976" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\New-MdtDrive.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\New-MdtDrive.ps1 should pass ScriptAnalyzer" time="0.525" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should pass ScriptAnalyzer" time="0.1251" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should pass ScriptAnalyzer" time="0.2382" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should pass ScriptAnalyzer" time="0.1328" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should pass ScriptAnalyzer" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Test-PSCore.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Private\Test-PSCore.ps1 should pass ScriptAnalyzer" time="0.1177" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Get-LatestFlash.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Public\Get-LatestFlash.ps1 should pass ScriptAnalyzer" time="0.6206" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Get-LatestServicingStack.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Public\Get-LatestServicingStack.ps1 should pass ScriptAnalyzer" time="0.5021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should pass ScriptAnalyzer" time="0.2991" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should pass ScriptAnalyzer" time="0.7754" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should pass ScriptAnalyzer" time="0.3549" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\LatestUpdate.psm1 should pass ScriptAnalyzer" name="General project validation.C:\projects\latestupdate\LatestUpdate\LatestUpdate.psm1 should pass ScriptAnalyzer" time="0.0591" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Function validation" executed="True" result="Success" success="True" time="0.6785" asserts="0" description="Function validation">
            <results>
              <test-suite type="ParameterizedTest" name="Function validation.Script &lt;file&gt; should only contain one function" executed="True" result="Success" success="True" time="0.4156" asserts="0" description="Script &lt;file&gt; should only contain one function">
                <results>
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-KbUpdateArray.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-KbUpdateArray.ps1 should only contain one function" time="0.1394" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-RxString.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-RxString.ps1 should only contain one function" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateCatalogLink.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateCatalogLink.ps1 should only contain one function" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateDownloadArray.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateDownloadArray.ps1 should only contain one function" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateFeed.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateFeed.ps1 should only contain one function" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Get-ValidPath.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Get-ValidPath.ps1 should only contain one function" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Import-MdtModule.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Import-MdtModule.ps1 should only contain one function" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\New-MdtDrive.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\New-MdtDrive.ps1 should only contain one function" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should only contain one function" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should only contain one function" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should only contain one function" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should only contain one function" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Private\Test-PSCore.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Private\Test-PSCore.ps1 should only contain one function" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestFlash.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestFlash.ps1 should only contain one function" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestServicingStack.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestServicingStack.ps1 should only contain one function" time="0.0661" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should only contain one function" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should only contain one function" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\projects\latestupdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should only contain one function" name="Function validation.Script C:\projects\latestupdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should only contain one function" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="Function validation.&lt;file&gt; should match function name" executed="True" result="Success" success="True" time="0.263" asserts="0" description="&lt;file&gt; should match function name">
                <results>
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-KbUpdateArray.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Get-KbUpdateArray.ps1 should match function name" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-RxString.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Get-RxString.ps1 should match function name" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateCatalogLink.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateCatalogLink.ps1 should match function name" time="0.022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateDownloadArray.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateDownloadArray.ps1 should match function name" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateFeed.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Get-UpdateFeed.ps1 should match function name" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Get-ValidPath.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Get-ValidPath.ps1 should match function name" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Import-MdtModule.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Import-MdtModule.ps1 should match function name" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\New-MdtDrive.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\New-MdtDrive.ps1 should match function name" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should match function name" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should match function name" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should match function name" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should match function name" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Private\Test-PSCore.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Private\Test-PSCore.ps1 should match function name" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Get-LatestFlash.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Public\Get-LatestFlash.ps1 should match function name" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Get-LatestServicingStack.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Public\Get-LatestServicingStack.ps1 should match function name" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should match function name" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should match function name" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\projects\latestupdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should match function name" name="Function validation.C:\projects\latestupdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should match function name" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\latestupdate\tests\Module.Tests.ps1" executed="True" result="Success" success="True" time="0.1131" asserts="0" description="C:\projects\latestupdate\tests\Module.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module Metadata Validation" executed="True" result="Success" success="True" time="0.1131" asserts="0" description="Module Metadata Validation">
            <results>
              <test-case description="Script fileinfo should be OK" name="Module Metadata Validation.Script fileinfo should be OK" time="0.0735" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="Import module should be OK" name="Module Metadata Validation.Import module should be OK" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\latestupdate\tests\PrivateFunctions.Tests.ps1" executed="True" result="Success" success="True" time="6.4088" asserts="0" description="C:\projects\latestupdate\tests\PrivateFunctions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Import-MdtModule" executed="True" result="Success" success="True" time="0.7715" asserts="0" description="Import-MdtModule">
            <results>
              <test-suite type="TestFixture" name="Importing the MDT PowerShell module" executed="True" result="Success" success="True" time="0.7715" asserts="0" description="Importing the MDT PowerShell module">
                <results>
                  <test-case description="Imports the MDT PowerShell module and returns True" name="Import-MdtModule.Importing the MDT PowerShell module.Imports the MDT PowerShell module and returns True" time="0.7715" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-MdtDrive" executed="True" result="Success" success="True" time="0.1647" asserts="0" description="New-MdtDrive">
            <results>
              <test-suite type="TestFixture" name="Creates a new MDT drive" executed="True" result="Success" success="True" time="0.1647" asserts="0" description="Creates a new MDT drive">
                <results>
                  <test-case description="Successfully creates the MDT drive" name="New-MdtDrive.Creates a new MDT drive.Successfully creates the MDT drive" time="0.1647" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-MdtPackagesFolder" executed="True" result="Success" success="True" time="0.1314" asserts="0" description="New-MdtPackagesFolder">
            <results>
              <test-suite type="TestFixture" name="Packages folder exists" executed="True" result="Success" success="True" time="0.0797" asserts="0" description="Packages folder exists">
                <results>
                  <test-case description="Returns True if the Packages folder exists" name="New-MdtPackagesFolder.Packages folder exists.Returns True if the Packages folder exists" time="0.0797" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Creates a new Packages folder" executed="True" result="Success" success="True" time="0.0516" asserts="0" description="Creates a new Packages folder">
                <results>
                  <test-case description="Successfully creates a Packages folder" name="New-MdtPackagesFolder.Creates a new Packages folder.Successfully creates a Packages folder" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-ValidPath" executed="True" result="Success" success="True" time="0.0679" asserts="0" description="Get-ValidPath">
            <results>
              <test-suite type="TestFixture" name="Return valid path" executed="True" result="Success" success="True" time="0.0366" asserts="0" description="Return valid path">
                <results>
                  <test-case description="Given a relative path, it returns a fully qualified path" name="Get-ValidPath.Return valid path.Given a relative path, it returns a fully qualified path" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Fix trailing backslash" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Fix trailing backslash">
                <results>
                  <test-case description="Given a path, it returns a without a trailing backslack" name="Get-ValidPath.Fix trailing backslash.Given a path, it returns a without a trailing backslack" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Select-LatestUpdate" executed="True" result="Success" success="True" time="0.0609" asserts="0" description="Select-LatestUpdate">
            <results>
              <test-suite type="TestFixture" name="Selects the latest update" executed="True" result="Success" success="True" time="0.0609" asserts="0" description="Selects the latest update">
                <results>
                  <test-case description="Given a list of updates, selects the latest one" name="Select-LatestUpdate.Selects the latest update.Given a list of updates, selects the latest one" time="0.0609" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Select-UniqueUrl" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Select-UniqueUrl">
            <results>
              <test-suite type="TestFixture" name="Select a single update" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Select a single update">
                <results>
                  <test-case description="Given a list of updates returns a single URL" name="Select-UniqueUrl.Select a single update.Given a list of updates returns a single URL" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Test-PSCore" executed="True" result="Success" success="True" time="0.0511" asserts="0" description="Test-PSCore">
            <results>
              <test-suite type="TestFixture" name="Tests whether we are running on PowerShell Core" executed="True" result="Success" success="True" time="0.0274" asserts="0" description="Tests whether we are running on PowerShell Core">
                <results>
                  <test-case description="Imports the MDT PowerShell module and returns True" name="Test-PSCore.Tests whether we are running on PowerShell Core.Imports the MDT PowerShell module and returns True" time="0.0274" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Tests whether we are running on Windows PowerShell" executed="True" result="Success" success="True" time="0.0238" asserts="0" description="Tests whether we are running on Windows PowerShell">
                <results>
                  <test-case description="Returns False if running Windows PowerShell" name="Test-PSCore.Tests whether we are running on Windows PowerShell.Returns False if running Windows PowerShell" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-UpdateFeed" executed="True" result="Success" success="True" time="0.7271" asserts="0" description="Get-UpdateFeed">
            <results>
              <test-suite type="TestFixture" name="Tests that Get-UpdateFeed returns valid XML" executed="True" result="Success" success="True" time="0.7271" asserts="0" description="Tests that Get-UpdateFeed returns valid XML">
                <results>
                  <test-case description="Returns valid XML" name="Get-UpdateFeed.Tests that Get-UpdateFeed returns valid XML.Returns valid XML" time="0.7271" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-UpdateCatalogLink" executed="True" result="Success" success="True" time="0.4944" asserts="0" description="Get-UpdateCatalogLink">
            <results>
              <test-suite type="TestFixture" name="Tests that Get-UpdateCatalogLink returns valid response" executed="True" result="Success" success="True" time="0.4944" asserts="0" description="Tests that Get-UpdateCatalogLink returns valid response">
                <results>
                  <test-case description="Returns valid response" name="Get-UpdateCatalogLink.Tests that Get-UpdateCatalogLink returns valid response.Returns valid response" time="0.4944" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-KbUpdateArray" executed="True" result="Success" success="True" time="0.4484" asserts="0" description="Get-KbUpdateArray">
            <results>
              <test-suite type="TestFixture" name="Tests that Get-KbUpdateArray returns a valid array" executed="True" result="Success" success="True" time="0.4484" asserts="0" description="Tests that Get-KbUpdateArray returns a valid array">
                <results>
                  <test-case description="Returns a valid array" name="Get-KbUpdateArray.Tests that Get-KbUpdateArray returns a valid array.Returns a valid array" time="0.3952" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns an array with valid properties" name="Get-KbUpdateArray.Tests that Get-KbUpdateArray returns a valid array.Returns an array with valid properties" time="0.0533" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-UpdateDownloadArray" executed="True" result="Success" success="True" time="3.3963" asserts="0" description="Get-UpdateDownloadArray">
            <results>
              <test-suite type="TestFixture" name="Returns a valid list of Cumulative updates" executed="True" result="Success" success="True" time="3.3963" asserts="0" description="Returns a valid list of Cumulative updates">
                <results>
                  <test-case description="Updates array returned should be of valid type" name="Get-UpdateDownloadArray.Returns a valid list of Cumulative updates.Updates array returned should be of valid type" time="3.3592" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Updtes array returned should have a count greater than 0" name="Get-UpdateDownloadArray.Returns a valid list of Cumulative updates.Updtes array returned should have a count greater than 0" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns a valid array with expected properties" name="Get-UpdateDownloadArray.Returns a valid list of Cumulative updates.Returns a valid array with expected properties" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-RxString" executed="True" result="Success" success="True" time="0.0567" asserts="0" description="Get-RxString">
            <results>
              <test-suite type="TestFixture" name="Returns the expected substring" executed="True" result="Success" success="True" time="0.0567" asserts="0" description="Returns the expected substring">
                <results>
                  <test-case description="Given the string '2018-09-07T17:55:12Z', returns '2018-09-07'" name="Get-RxString.Returns the expected substring.Given the string '2018-09-07T17:55:12Z', returns '2018-09-07'" time="0.0567" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\latestupdate\tests\PublicFunctions.Tests.ps1" executed="True" result="Success" success="True" time="119.2507" asserts="0" description="C:\projects\latestupdate\tests\PublicFunctions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-LatestUpdate" executed="True" result="Success" success="True" time="24.6738" asserts="0" description="Get-LatestUpdate">
            <results>
              <test-suite type="TestFixture" name="Returns a valid list of Cumulative or Monthly updates" executed="True" result="Success" success="True" time="3.9097" asserts="0" description="Returns a valid list of Cumulative or Monthly updates">
                <results>
                  <test-case description="Given no arguments, returns an array of updates" name="Get-LatestUpdate.Returns a valid list of Cumulative or Monthly updates.Given no arguments, returns an array of updates" time="3.865" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given no arguments, returns an array" name="Get-LatestUpdate.Returns a valid list of Cumulative or Monthly updates.Given no arguments, returns an array" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given no arguments, returns a valid array with expected properties" name="Get-LatestUpdate.Returns a valid list of Cumulative or Monthly updates.Given no arguments, returns a valid array with expected properties" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Windows 10: Returns expected results with -Build" executed="True" result="Success" success="True" time="20.7641" asserts="0" description="Windows 10: Returns expected results with -Build">
                <results>
                  <test-case description="Given '17763' returns updates for build 1809" name="Get-LatestUpdate.Windows 10: Returns expected results with -Build.Given '17763' returns updates for build 1809" time="3.676" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '17134' returns updates for build 1803" name="Get-LatestUpdate.Windows 10: Returns expected results with -Build.Given '17134' returns updates for build 1803" time="3.5875" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '16299' returns updates for build 1709" name="Get-LatestUpdate.Windows 10: Returns expected results with -Build.Given '16299' returns updates for build 1709" time="3.6942" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '15063' returns updates for build 1703" name="Get-LatestUpdate.Windows 10: Returns expected results with -Build.Given '15063' returns updates for build 1703" time="2.34" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '14393' returns updates for build 1607" name="Get-LatestUpdate.Windows 10: Returns expected results with -Build.Given '14393' returns updates for build 1607" time="3.0541" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '10586' returns updates for build 1511" name="Get-LatestUpdate.Windows 10: Returns expected results with -Build.Given '10586' returns updates for build 1511" time="2.1635" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '10240' returns updates for build 1507" name="Get-LatestUpdate.Windows 10: Returns expected results with -Build.Given '10240' returns updates for build 1507" time="2.2487" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-LatestFlash" executed="True" result="Success" success="True" time="17.6491" asserts="0" description="Get-LatestFlash">
            <results>
              <test-suite type="TestFixture" name="Returns a valid list of Adobe Flash Player updates" executed="True" result="Success" success="True" time="17.5784" asserts="0" description="Returns a valid list of Adobe Flash Player updates">
                <results>
                  <test-case description="Given no arguments, returns an array of updates" name="Get-LatestFlash.Returns a valid list of Adobe Flash Player updates.Given no arguments, returns an array of updates" time="17.4525" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given no arguments, returns an array" name="Get-LatestFlash.Returns a valid list of Adobe Flash Player updates.Given no arguments, returns an array" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given no arguments, returns a valid array with expected properties" name="Get-LatestFlash.Returns a valid list of Adobe Flash Player updates.Given no arguments, returns a valid array with expected properties" time="0.1199" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Returns expected results with Flash updates array" executed="True" result="Success" success="True" time="0.0707" asserts="0" description="Returns expected results with Flash updates array">
                <results>
                  <test-case description="Given no arguments, returns updates for Adobe Flash Player" name="Get-LatestFlash.Returns expected results with Flash updates array.Given no arguments, returns updates for Adobe Flash Player" time="0.0707" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-LatestServicingStack" executed="True" result="Success" success="True" time="14.2656" asserts="0" description="Get-LatestServicingStack">
            <results>
              <test-suite type="TestFixture" name="Returns a valid list of Servicing Stack updates" executed="True" result="Success" success="True" time="14.1768" asserts="0" description="Returns a valid list of Servicing Stack updates">
                <results>
                  <test-case description="Given no arguments, returns an array of updates" name="Get-LatestServicingStack.Returns a valid list of Servicing Stack updates.Given no arguments, returns an array of updates" time="14.0681" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given no arguments, returns an array" name="Get-LatestServicingStack.Returns a valid list of Servicing Stack updates.Given no arguments, returns an array" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given no arguments, returns a valid array with expected properties" name="Get-LatestServicingStack.Returns a valid list of Servicing Stack updates.Given no arguments, returns a valid array with expected properties" time="0.1028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Returns expected results with Servicing Stack updates array" executed="True" result="Success" success="True" time="0.0888" asserts="0" description="Returns expected results with Servicing Stack updates array">
                <results>
                  <test-case description="Given no arguments, returns updates for Servicing Stack" name="Get-LatestServicingStack.Returns expected results with Servicing Stack updates array.Given no arguments, returns updates for Servicing Stack" time="0.0888" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Save-LatestUpdate" executed="True" result="Success" success="True" time="62.6622" asserts="0" description="Save-LatestUpdate">
            <results>
              <test-suite type="TestFixture" name="Download the latest Windows 10 Cumulative updates" executed="True" result="Success" success="True" time="12.62" asserts="0" description="Download the latest Windows 10 Cumulative updates">
                <results>
                  <test-case description="Given updates returned from Get-LatestUpdate, it successfully downloads the update" name="Save-LatestUpdate.Download the latest Windows 10 Cumulative updates.Given updates returned from Get-LatestUpdate, it successfully downloads the update" time="12.62" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Download the latest Adobe Flash Player updates" executed="True" result="Success" success="True" time="29.9526" asserts="0" description="Download the latest Adobe Flash Player updates">
                <results>
                  <test-case description="Given updates returned from Get-LatestFlash, it successfully downloads the update" name="Save-LatestUpdate.Download the latest Adobe Flash Player updates.Given updates returned from Get-LatestFlash, it successfully downloads the update" time="29.9526" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Download the latest Servicing Stack updates" executed="True" result="Success" success="True" time="20.0896" asserts="0" description="Download the latest Servicing Stack updates">
                <results>
                  <test-case description="Given updates returned from Get-LatestServicingStack, it successfully downloads the update" name="Save-LatestUpdate.Download the latest Servicing Stack updates.Given updates returned from Get-LatestServicingStack, it successfully downloads the update" time="20.0896" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>