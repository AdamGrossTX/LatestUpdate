<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="60" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2018-03-31" time="23:41:55">
  <environment user="aaron" machine-name="DESKTOP-7DMVQ44" cwd="C:\Projects\LatestUpdate" user-domain="home" platform="Microsoft Windows 10 Pro|C:\Windows|\Device\Harddisk0\Partition2" nunit-version="2.5.8.0" os-version="10.0.16299" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="46.6361" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Projects\LatestUpdate\Tests\Main.Tests.ps1" executed="True" result="Success" success="True" time="8.1625" asserts="0" description="C:\Projects\LatestUpdate\Tests\Main.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="General project validation" executed="True" result="Success" success="True" time="6.5526" asserts="0" description="General project validation">
            <results>
              <test-suite type="ParameterizedTest" name="General project validation.Script &lt;file&gt; should be valid PowerShell" executed="True" result="Success" success="True" time="1.123" asserts="0" description="Script &lt;file&gt; should be valid PowerShell">
                <results>
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\Get-ValidPath.ps1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\Get-ValidPath.ps1 should be valid PowerShell" time="0.8207" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\Import-MdtModule.ps1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\Import-MdtModule.ps1 should be valid PowerShell" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtDrive.ps1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtDrive.ps1 should be valid PowerShell" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should be valid PowerShell" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should be valid PowerShell" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should be valid PowerShell" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should be valid PowerShell" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should be valid PowerShell" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should be valid PowerShell" time="0.0935" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\LatestUpdate.psm1 should be valid PowerShell" name="General project validation.Script C:\Projects\LatestUpdate\LatestUpdate\LatestUpdate.psm1 should be valid PowerShell" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="General project validation.&lt;file&gt; should pass ScriptAnalyzer" executed="True" result="Success" success="True" time="5.4296" asserts="0" description="&lt;file&gt; should pass ScriptAnalyzer">
                <results>
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\Get-ValidPath.ps1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\Private\Get-ValidPath.ps1 should pass ScriptAnalyzer" time="3.0531" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\Import-MdtModule.ps1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\Private\Import-MdtModule.ps1 should pass ScriptAnalyzer" time="0.1686" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtDrive.ps1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtDrive.ps1 should pass ScriptAnalyzer" time="0.4102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should pass ScriptAnalyzer" time="0.0846" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should pass ScriptAnalyzer" time="0.1187" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should pass ScriptAnalyzer" time="0.0586" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should pass ScriptAnalyzer" time="0.6145" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should pass ScriptAnalyzer" time="0.4448" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should pass ScriptAnalyzer" time="0.4211" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\LatestUpdate.psm1 should pass ScriptAnalyzer" name="General project validation.C:\Projects\LatestUpdate\LatestUpdate\LatestUpdate.psm1 should pass ScriptAnalyzer" time="0.0554" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Function validation" executed="True" result="Success" success="True" time="1.61" asserts="0" description="Function validation">
            <results>
              <test-suite type="ParameterizedTest" name="Function validation.Script &lt;file&gt; should only contain one function" executed="True" result="Success" success="True" time="1.2617" asserts="0" description="Script &lt;file&gt; should only contain one function">
                <results>
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\Get-ValidPath.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\Get-ValidPath.ps1 should only contain one function" time="0.948" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\Import-MdtModule.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\Import-MdtModule.ps1 should only contain one function" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtDrive.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtDrive.ps1 should only contain one function" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should only contain one function" time="0.0609" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should only contain one function" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should only contain one function" time="0.0796" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should only contain one function" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should only contain one function" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should only contain one function" time="0.025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script C:\Projects\LatestUpdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should only contain one function" name="Function validation.Script C:\Projects\LatestUpdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should only contain one function" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="Function validation.&lt;file&gt; should match function name" executed="True" result="Success" success="True" time="0.3482" asserts="0" description="&lt;file&gt; should match function name">
                <results>
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\Get-ValidPath.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Private\Get-ValidPath.ps1 should match function name" time="0.0715" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\Import-MdtModule.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Private\Import-MdtModule.ps1 should match function name" time="0.0191" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtDrive.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtDrive.ps1 should match function name" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Private\New-MdtPackagesFolder.ps1 should match function name" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Private\Remove-MdtDrive.ps1 should match function name" time="0.0777" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Private\Select-LatestUpdate.ps1 should match function name" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Private\Select-UniqueUrl.ps1 should match function name" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Public\Get-LatestUpdate.ps1 should match function name" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Public\Import-LatestUpdate.ps1 should match function name" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="C:\Projects\LatestUpdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should match function name" name="Function validation.C:\Projects\LatestUpdate\LatestUpdate\Public\Save-LatestUpdate.ps1 should match function name" time="0.0291" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Projects\LatestUpdate\Tests\Module.Tests.ps1" executed="True" result="Success" success="True" time="0.33" asserts="0" description="C:\Projects\LatestUpdate\Tests\Module.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module Metadata Validation" executed="True" result="Success" success="True" time="0.33" asserts="0" description="Module Metadata Validation">
            <results>
              <test-case description="Script fileinfo should be OK" name="Module Metadata Validation.Script fileinfo should be OK" time="0.2556" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="Import module should be OK" name="Module Metadata Validation.Import module should be OK" time="0.0744" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Projects\LatestUpdate\Tests\PrivateFunctions.Tests.ps1" executed="True" result="Success" success="True" time="1.5622" asserts="0" description="C:\Projects\LatestUpdate\Tests\PrivateFunctions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Import-MdtModule" executed="True" result="Success" success="True" time="0.4269" asserts="0" description="Import-MdtModule">
            <results>
              <test-suite type="TestFixture" name="Importing the MDT PowerShell module" executed="True" result="Success" success="True" time="0.4269" asserts="0" description="Importing the MDT PowerShell module">
                <results>
                  <test-case description="Imports the MDT PowerShell module and returns True" name="Import-MdtModule.Importing the MDT PowerShell module.Imports the MDT PowerShell module and returns True" time="0.4269" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-MdtDrive" executed="True" result="Success" success="True" time="0.2655" asserts="0" description="New-MdtDrive">
            <results>
              <test-suite type="TestFixture" name="Creates a new MDT drive" executed="True" result="Success" success="True" time="0.2655" asserts="0" description="Creates a new MDT drive">
                <results>
                  <test-case description="Successfully creates the MDT drive" name="New-MdtDrive.Creates a new MDT drive.Successfully creates the MDT drive" time="0.2655" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-MdtPackagesFolder" executed="True" result="Success" success="True" time="0.2684" asserts="0" description="New-MdtPackagesFolder">
            <results>
              <test-suite type="TestFixture" name="Packages folder exists" executed="True" result="Success" success="True" time="0.1483" asserts="0" description="Packages folder exists">
                <results>
                  <test-case description="Returns True if the Packages folder exists" name="New-MdtPackagesFolder.Packages folder exists.Returns True if the Packages folder exists" time="0.1483" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Creates a new Packages folder" executed="True" result="Success" success="True" time="0.12" asserts="0" description="Creates a new Packages folder">
                <results>
                  <test-case description="Successfully creates a Packages folder" name="New-MdtPackagesFolder.Creates a new Packages folder.Successfully creates a Packages folder" time="0.12" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-ValidPath" executed="True" result="Success" success="True" time="0.2386" asserts="0" description="Get-ValidPath">
            <results>
              <test-suite type="TestFixture" name="Return valid path" executed="True" result="Success" success="True" time="0.1675" asserts="0" description="Return valid path">
                <results>
                  <test-case description="Given a relative path, it returns a fully qualified path" name="Get-ValidPath.Return valid path.Given a relative path, it returns a fully qualified path" time="0.1675" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Fix trailing backslash" executed="True" result="Success" success="True" time="0.0711" asserts="0" description="Fix trailing backslash">
                <results>
                  <test-case description="Given a path, it returns a without a trailing backslack" name="Get-ValidPath.Fix trailing backslash.Given a path, it returns a without a trailing backslack" time="0.0711" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Select-LatestUpdate" executed="True" result="Success" success="True" time="0.2059" asserts="0" description="Select-LatestUpdate">
            <results>
              <test-suite type="TestFixture" name="Selects the latest update" executed="True" result="Success" success="True" time="0.2059" asserts="0" description="Selects the latest update">
                <results>
                  <test-case description="Given a list of updates, selects the latest one" name="Select-LatestUpdate.Selects the latest update.Given a list of updates, selects the latest one" time="0.2059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Select-UniqueUrl" executed="True" result="Success" success="True" time="0.1569" asserts="0" description="Select-UniqueUrl">
            <results>
              <test-suite type="TestFixture" name="Select a single update" executed="True" result="Success" success="True" time="0.1569" asserts="0" description="Select a single update">
                <results>
                  <test-case description="Given a list of updates returns a single URL" name="Select-UniqueUrl.Select a single update.Given a list of updates returns a single URL" time="0.1569" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Projects\LatestUpdate\Tests\PublicFunctions.Tests.ps1" executed="True" result="Success" success="True" time="36.5813" asserts="0" description="C:\Projects\LatestUpdate\Tests\PublicFunctions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-LatestUpdate" executed="True" result="Success" success="True" time="32.2123" asserts="0" description="Get-LatestUpdate">
            <results>
              <test-suite type="TestFixture" name="Returns a valid list of updates" executed="True" result="Success" success="True" time="5.247" asserts="0" description="Returns a valid list of updates">
                <results>
                  <test-case description="Given no arguments, returns an array of updates" name="Get-LatestUpdate.Returns a valid list of updates.Given no arguments, returns an array of updates" time="5.2131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given no arguments, returns a valid array with expected properties" name="Get-LatestUpdate.Returns a valid list of updates.Given no arguments, returns a valid array with expected properties" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Returns expected results with -SearchString" executed="True" result="Success" success="True" time="6.4778" asserts="0" description="Returns expected results with -SearchString">
                <results>
                  <test-case description="Given 'Cumulative.*x86' returns updates for Windows 10 x86" name="Get-LatestUpdate.Returns expected results with -SearchString.Given 'Cumulative.*x86' returns updates for Windows 10 x86" time="3.2643" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given 'Cumulative.*Server.*x64' returns updates for Windows Server only" name="Get-LatestUpdate.Returns expected results with -SearchString.Given 'Cumulative.*Server.*x64' returns updates for Windows Server only" time="3.2135" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Returns expected results with -Build" executed="True" result="Success" success="True" time="20.4875" asserts="0" description="Returns expected results with -Build">
                <results>
                  <test-case description="Given '16299' returns updates for build 1709" name="Get-LatestUpdate.Returns expected results with -Build.Given '16299' returns updates for build 1709" time="4.2213" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '15063' returns updates for build 1703" name="Get-LatestUpdate.Returns expected results with -Build.Given '15063' returns updates for build 1703" time="5.7616" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '14393' returns updates for build 1607" name="Get-LatestUpdate.Returns expected results with -Build.Given '14393' returns updates for build 1607" time="4.2137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '10586' returns updates for build 1511" name="Get-LatestUpdate.Returns expected results with -Build.Given '10586' returns updates for build 1511" time="3.1953" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given '10240' returns updates for build 1507" name="Get-LatestUpdate.Returns expected results with -Build.Given '10240' returns updates for build 1507" time="3.0954" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Save-LatestUpdate" executed="True" result="Success" success="True" time="4.3689" asserts="0" description="Save-LatestUpdate">
            <results>
              <test-suite type="TestFixture" name="Download the latest update" executed="True" result="Success" success="True" time="4.3689" asserts="0" description="Download the latest update">
                <results>
                  <test-case description="Given updates returned from Get-LatestUpdate, it successfully downloads the update" name="Save-LatestUpdate.Download the latest update.Given updates returned from Get-LatestUpdate, it successfully downloads the update" time="4.3689" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>